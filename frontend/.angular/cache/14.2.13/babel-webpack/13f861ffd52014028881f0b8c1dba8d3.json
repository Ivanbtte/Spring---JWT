{"ast":null,"code":"import { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./login.service\";\nimport * as i2 from \"ngx-cookie-service\";\nexport let JwtInterceptorService = /*#__PURE__*/(() => {\n  class JwtInterceptorService {\n    constructor(loginService, cookieService) {\n      this.loginService = loginService;\n      this.cookieService = cookieService;\n      this.excludedUrls = ['/api/v1/files/upload', '/api/v1/files/update', '/api/v1/investigador/cargar-excel']; // Agrega aquí cualquier URL que no deba tener JWT\n    }\n\n    intercept(req, next) {\n      let token = this.cookieService.get('token') || this.loginService.userToken; // Hacer una excepción para la ruta '/auth/login'\n\n      if (req.url.includes('/auth/login')) {\n        // No incluir el token en esta ruta específica\n        return next.handle(req);\n      }\n\n      if (token && !this.excludedUrls.some(url => req.url.includes(url))) {\n        req = req.clone({\n          setHeaders: {\n            'Content-Type': 'application/json; charset=utf-8',\n            'Accept': 'application/json',\n            'Authorization': `Bearer ${token}`\n          }\n        });\n      } else {\n        req = req.clone({\n          setHeaders: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n      }\n\n      return next.handle(req);\n    }\n\n  }\n\n  JwtInterceptorService.ɵfac = function JwtInterceptorService_Factory(t) {\n    return new (t || JwtInterceptorService)(i0.ɵɵinject(i1.LoginService), i0.ɵɵinject(i2.CookieService));\n  };\n\n  JwtInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JwtInterceptorService,\n    factory: JwtInterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n  return JwtInterceptorService;\n})();","map":null,"metadata":{},"sourceType":"module"}