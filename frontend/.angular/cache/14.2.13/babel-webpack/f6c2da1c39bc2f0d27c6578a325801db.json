{"ast":null,"code":"import { catchError, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let InvestigadorService = /*#__PURE__*/(() => {\n  class InvestigadorService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getInvestigadores() {\n      return this.http.get(`${environment.urlApi}investigador`).pipe(catchError(this.handleError));\n    }\n\n    getInvestigador(id) {\n      return this.http.get(`${environment.urlApi}investigador/${id}`).pipe(catchError(this.handleError));\n    }\n\n    createInvestigador(investigador) {\n      return this.http.post(`${environment.urlApi}investigador`, investigador).pipe(catchError(this.handleError));\n    }\n\n    updateInvestigador(investigador) {\n      return this.http.put(`${environment.urlApi}investigador/${investigador.id}`, investigador).pipe(catchError(this.handleError));\n    }\n\n    deleteInvestigador(id) {\n      return this.http.delete(`${environment.urlApi}investigador/${id}`).pipe(catchError(this.handleError));\n    }\n\n    handleError(error) {\n      if (error.status == 0) {\n        console.error('Se ha producido un error ', error.status, error.error);\n      } else {\n        console.error('Backend retornó el código de estado ', error.status, error.error);\n      }\n\n      return throwError(() => new Error('Algo falló. Por favor intente nuevamente.'));\n    }\n\n    getInvestigadorByInstitute(id) {\n      return this.http.get(`${environment.urlApi}investigador/instituto/${id}`).pipe(catchError(this.handleError));\n    } // Método para cargar investigadores desde un archivo Excel\n\n\n    cargarInvestigadoresDesdeExcel(file) {\n      const formData = new FormData();\n      formData.append('file', file);\n      return this.http.post(`${environment.urlApi}investigador/cargar-excel`, formData, {\n        responseType: 'text' // Especifica que esperas una respuesta en formato texto\n\n      }).pipe(catchError(this.handleError));\n    }\n\n    descargarFormato() {\n      window.open(`${environment.urlApi}files/descargar-formato`, '_blank');\n    }\n\n  }\n\n  InvestigadorService.ɵfac = function InvestigadorService_Factory(t) {\n    return new (t || InvestigadorService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  InvestigadorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InvestigadorService,\n    factory: InvestigadorService.ɵfac,\n    providedIn: 'root'\n  });\n  return InvestigadorService;\n})();","map":null,"metadata":{},"sourceType":"module"}