{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/registrarusuario/registrarusuario.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../../shared/nav/nav.component\";\nimport * as i6 from \"../../../sidebar/sidebar/sidebar.component\";\n\nfunction EditarUsuarioComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"label\", 17);\n    i0.ɵɵtext(2, \"Rol\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"select\", 18)(4, \"option\", 19);\n    i0.ɵɵtext(5, \"Investigador\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"option\", 20);\n    i0.ɵɵtext(7, \"Director\");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nfunction EditarUsuarioComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1, \" La contrase\\u00F1a debe tener al menos 8 caracteres. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditarUsuarioComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1, \" Las contrase\\u00F1as no coinciden. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let EditarUsuarioComponent = /*#__PURE__*/(() => {\n  class EditarUsuarioComponent {\n    constructor(fb, registrarusuarioService, route, router) {\n      this.fb = fb;\n      this.registrarusuarioService = registrarusuarioService;\n      this.route = route;\n      this.router = router;\n      this.userId = 0;\n      this.passwordFieldType = 'password';\n      this.passwordToggleIcon = 'fa fa-eye';\n      this.username = 'username';\n      this.userstatus = false;\n      this.isAdmin = false;\n      this.userForm = this.fb.group({\n        id: [''],\n        role: ['', Validators.required],\n        username: [''],\n        password: ['', [Validators.minLength(8), this.passwordValidator]],\n        confirmPassword: ['']\n      }, {\n        validator: this.passwordMatchValidator\n      });\n    }\n\n    ngOnInit() {\n      this.userId = this.route.snapshot.params['id'];\n\n      if (this.userId) {\n        this.loadUserData(this.userId);\n      }\n    }\n\n    loadUserData(userId) {\n      this.registrarusuarioService.getUserById(userId).subscribe(user => {\n        this.userId = user.id;\n        this.username = user.username;\n        this.userstatus = user.enabled;\n        this.isAdmin = user.role === 'ADMIN' || user.role === 'ROOT';\n        this.userForm.patchValue({\n          id: this.userId,\n          role: user.role || '',\n          username: user.username || ''\n        });\n      }, error => {\n        console.error('Error al cargar los datos del usuario:', error);\n      });\n    }\n\n    onSubmit() {\n      if (this.userForm.invalid) {\n        this.userForm.markAllAsTouched();\n        return;\n      }\n\n      this.registrarusuarioService.getUserById(this.userId).subscribe(currentUserData => {\n        const updatedUser = {\n          id: this.userId,\n          username: this.userForm.value.username || currentUserData.username,\n          password: this.userForm.value.password ? this.userForm.value.password : currentUserData.password,\n          role: this.userForm.value.role ? this.userForm.value.role.toUpperCase() : currentUserData.role\n        };\n        this.registrarusuarioService.updateUserPass(this.userId, updatedUser).subscribe(userResponse => {\n          this.router.navigate(['/usuario']);\n          Swal.fire({\n            icon: \"success\",\n            title: \"¡Exitoso!\",\n            text: \"El usuario ha sido editado correctamente.\"\n          });\n        }, error => {\n          Swal.fire({\n            icon: \"error\",\n            title: \"Oops...\",\n            text: \"Algo salió mal!\"\n          });\n        });\n      }, error => {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Error al obtener los datos del usuario\",\n          text: \"No se pudieron cargar los datos actuales del usuario.\"\n        });\n      });\n    } // Validación personalizada para la contraseña: solo aplicarla si se ingresa un valor\n\n\n    passwordValidator(control) {\n      const value = control.value;\n\n      if (!value) {\n        return null;\n      }\n\n      if (!/[A-Z]/.test(value)) {\n        return {\n          uppercase: true\n        };\n      }\n\n      if (!/[0-9]/.test(value)) {\n        return {\n          number: true\n        };\n      }\n\n      if (!/[^A-Za-z0-9]/.test(value)) {\n        return {\n          special: true\n        };\n      }\n\n      return null;\n    } // Validación para asegurarse de que las contraseñas coincidan, pero solo si se ingresan\n\n\n    passwordMatchValidator(form) {\n      const password = form.get('password')?.value;\n      const confirmPassword = form.get('confirmPassword')?.value;\n\n      if (!password && !confirmPassword) {\n        return null; // Si ambos están vacíos, no hay error\n      }\n\n      return password === confirmPassword ? null : {\n        mismatch: true\n      };\n    }\n\n    togglePasswordVisibility() {\n      if (this.passwordFieldType === 'password') {\n        this.passwordFieldType = 'text';\n        this.passwordToggleIcon = 'fa fa-eye-slash';\n      } else {\n        this.passwordFieldType = 'password';\n        this.passwordToggleIcon = 'fa fa-eye';\n      }\n    }\n\n    cancel() {\n      this.router.navigate(['/usuario']);\n    }\n\n  }\n\n  EditarUsuarioComponent.ɵfac = function EditarUsuarioComponent_Factory(t) {\n    return new (t || EditarUsuarioComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.RegistrarusuarioService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  EditarUsuarioComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditarUsuarioComponent,\n    selectors: [[\"app-editar-usuario\"]],\n    decls: 30,\n    vars: 8,\n    consts: [[1, \"container\"], [1, \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"email\"], [1, \"input-group\"], [\"id\", \"username\", \"formControlName\", \"username\", \"type\", \"email\", 1, \"form-control\"], [\"class\", \"form-group\", 4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Ingrese su contrase\\u00F1a\", 1, \"form-control\", 3, \"type\"], [1, \"input-group-append\"], [1, \"input-group-text\", \"password-toggle\", 3, \"click\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"confirmPassword\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", \"placeholder\", \"Confirme su contrase\\u00F1a\", 1, \"form-control\", 3, \"type\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"btn-block\", 3, \"click\"], [\"for\", \"role\"], [\"id\", \"role\", \"formControlName\", \"role\", 1, \"form-control\"], [\"value\", \"INVESTIGADOR\"], [\"value\", \"COORDINADOR\"], [1, \"text-danger\"]],\n    template: function EditarUsuarioComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-nav\")(1, \"app-sidebar\");\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"h3\", 1);\n        i0.ɵɵtext(4, \"Edici\\u00F3n de Usuario\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function EditarUsuarioComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(6, \"label\", 3);\n        i0.ɵɵtext(7, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵelement(9, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, EditarUsuarioComponent_div_10_Template, 8, 0, \"div\", 6);\n        i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 8);\n        i0.ɵɵtext(13, \"Contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 4);\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementStart(16, \"div\", 10)(17, \"span\", 11);\n        i0.ɵɵlistener(\"click\", function EditarUsuarioComponent_Template_span_click_17_listener() {\n          return ctx.togglePasswordVisibility();\n        });\n        i0.ɵɵelement(18, \"i\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(19, EditarUsuarioComponent_div_19_Template, 2, 0, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 7)(21, \"label\", 13);\n        i0.ɵɵtext(22, \"Confirmar Contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 4);\n        i0.ɵɵelement(24, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(25, EditarUsuarioComponent_div_25_Template, 2, 0, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 15);\n        i0.ɵɵtext(27, \"Actualizar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function EditarUsuarioComponent_Template_button_click_28_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(29, \"Cancelar\");\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        let tmp_4_0;\n        let tmp_6_0;\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAdmin);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"type\", ctx.passwordFieldType);\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassMap(ctx.passwordToggleIcon);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.userForm.get(\"password\")) == null ? null : tmp_4_0.errors == null ? null : tmp_4_0.errors[\"minlength\"]) && ((tmp_4_0 = ctx.userForm.get(\"password\")) == null ? null : tmp_4_0.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"type\", ctx.passwordFieldType);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.userForm.errors == null ? null : ctx.userForm.errors[\"mismatch\"]) && ((tmp_6_0 = ctx.userForm.get(\"confirmPassword\")) == null ? null : tmp_6_0.touched));\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.NavComponent, i6.SidebarComponent],\n    styles: [\"body[_ngcontent-%COMP%]{font-family:Arial,sans-serif;background-color:#f8f9fa;margin:0;padding:0;height:100vh;display:flex;justify-content:center;align-items:center}.container[_ngcontent-%COMP%]{margin:50px auto;padding:20px;background-color:#fff;border-radius:8px;box-shadow:0 2px 10px #0000001a;max-width:500px}.registration-form[_ngcontent-%COMP%]{width:100%;margin:30px;padding:20px;border:1px solid #ccc;border-radius:10px;background-color:#fff;box-shadow:0 0 10px #0000001a}.registration-form[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{margin-bottom:20px}.registration-form[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]{margin-bottom:15px}.registration-form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-weight:700;color:#333}.registration-form[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]{border-radius:5px;padding:10px;font-size:14px}.registration-form[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]:focus{border-color:#007bff;box-shadow:0 0 5px #007bff80}.registration-form[_ngcontent-%COMP%]   .btn-primary[_ngcontent-%COMP%]{background-color:#007bff;border-color:#007bff;border-radius:5px;font-size:16px}.registration-form[_ngcontent-%COMP%]   .btn-primary[_ngcontent-%COMP%]:hover{background-color:#0056b3;border-color:#004085}.registration-form[_ngcontent-%COMP%]   .text-danger[_ngcontent-%COMP%]{font-size:12px;margin-top:5px}.text-center[_ngcontent-%COMP%]{text-align:center}.my-3[_ngcontent-%COMP%]{margin-top:1rem;margin-bottom:1rem}.input-group-append[_ngcontent-%COMP%]   .input-group-text[_ngcontent-%COMP%]{background:none;border:none;cursor:pointer}.form-control[_ngcontent-%COMP%]{padding-right:2.5rem}.password-toggle[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:1.2rem}.btn-block[_ngcontent-%COMP%]{margin-bottom:10px}button[type=submit][_ngcontent-%COMP%]{margin-right:10px}\"]\n  });\n  return EditarUsuarioComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}